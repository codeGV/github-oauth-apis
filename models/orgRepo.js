const mongoose=require("mongoose");

const Schema= mongoose.Schema
const RepoSchema = new Schema({
 githubId:  String ,
  name: { type: String }, 
  slug: { type: String },
  include: { type: Boolean },
  id: { type: String }, 
  connectedAt: { type: Date }, 
  nodeId: { type: String }, 
  fullName: { type: String }, 
  private: { type: Boolean }, 
   owner: { type: Schema.Types.ObjectId, ref: "github-integration" },
  htmlUrl: { type: String },
  description: { type: String }, 
  fork: { type: Boolean }, 
  url: { type: String }, 
  forksUrl: { type: String },
  keysUrl: { type: String },
  collaboratorsUrl: { type: String },
  teamsUrl: { type: String },
  hooksUrl: { type: String },
  issueEventsUrl: { type: String },
  eventsUrl: { type: String },
  assigneesUrl: { type: String },
  branchesUrl: { type: String },
  tagsUrl: { type: String },
  blobsUrl: { type: String },
  gitTagsUrl: { type: String },
  gitRefsUrl: { type: String },
  treesUrl: { type: String },
  statusesUrl: { type: String },
  languagesUrl: { type: String },
  stargazersUrl: { type: String },
  contributorsUrl: { type: String },
  subscribersUrl: { type: String },
  subscriptionUrl: { type: String },
  commitsUrl: { type: String },
  gitCommitsUrl: { type: String },
  commentsUrl: { type: String },
  issueCommentUrl: { type: String },
  contentsUrl: { type: String },
  compareUrl: { type: String },
  mergesUrl: { type: String },
  archiveUrl: { type: String },
  downloadsUrl: { type: String },
  issuesUrl: { type: String },
  pullsUrl: { type: String },
  milestonesUrl: { type: String },
  notificationsUrl: { type: String },
  labelsUrl: { type: String },
  releasesUrl: { type: String },
  deploymentsUrl: { type: String },
  // createdAt: { type: Date },
  updatedAt: { type: Date }, 
  pushedAt: { type: Date },
  gitUrl: { type: String },
  sshUrl: { type: String },
  cloneUrl: { type: String }, 
  svnUrl: { type: String },
  homepage: { type: String }, 
  size: { type: Number }, 
  stargazersCount: { type: Number }, 
  watchersCount: { type: Number }, 
  language: { type: String }, 
  hasIssues: { type: Boolean }, 
  hasProjects: { type: Boolean }, 
  hasDownloads: { type: Boolean }, 
  hasWiki: { type: Boolean },
  hasPages: { type: Boolean }, 
  hasDiscussions: { type: Boolean }, 
  forksCount: { type: Number }, 
  mirrorUrl: { type: String }, 
  archived: { type: Boolean }, 
  disabled: { type: Boolean },
  openIssuesCount: { type: Number }, 
  license: { type: String }, 
  allowForking: { type: Boolean }, 
  isTemplate: { type: Boolean }, 
  webCommitSignoffRequired: { type: Boolean }, 
   topics: { type: [String] }, 
  visibility: { type: String },
  forks: { type: Number },
  openIssues: { type: Number }, 
  watchers: { type: Number }, 
  defaultBranch: { type: String }
})
const OrgRepo = mongoose.model("github-Repo", RepoSchema);
module.exports = OrgRepo;
